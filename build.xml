<project default="compile">

  <!-- build.xml for cs56_utilities_ldap -->

  <property environment="env"/> <!-- load the environment variables --> 
  <property name="projectName" value="cs56_utilities_ldap" /> 
  <property name="javadocDest" value="javadoc" /> 
  <property name="path" value="edu/ucsb/cs56/utilities/ldap" />
  <property name="package" value="edu.ucsb.cs56.utilities.ldap" />
  <path id="project.class.path">
    <pathelement location="build" />
    <pathelement location="." />
  </path>
  

  <target name="compile" description="compile code">  
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build"  includeantruntime="False" >             
      <classpath refid="project.class.path" />
    </javac>
  </target>
  
  
  
  <target name="installCert" depends="compile" description="Echo the command to install the certificate">
   <echo>

Before you can run ldap queries over https, you need to install the
SSL certificate for the host you want to connect to.  The installCert
program must be run to do this.

To install the certificate:

 (1) Look in /etc/ldap.conf for the line that says something like:

uri ldaps://somehost1.example.org ldaps://somehost2.example.org

    You want the string somehost1.example.org.  The one on CSIL
    machines will end with ucsb.edu.  This is the "hostname" for the
    certificate you need to install.

(2)  Run: 

java -cp build edu.ucsb.cs56.utilities.ldap.InstallCert hostname

   substituting in the hostname that you pulled out of /etc/ldap.conf

(3) The program may prompt you, asking you questions.  Take the
    defaults (i.e. just hit enter.)

(4) You can now run the SimpleQuery02 program.
</echo>
  </target>

  <target name="sq2" depends="compile" description="Runs SimpleQuery02--use with ant sq2 -Dinfile=examplelist.txt">
    <echo>
Run ant installCert first and follow instructions
You need an input file of lastname,firstname
exampleList.txt is an example
Run with ant sq2 -Dinfile=exampleList.txt
Output will be in outputListName.txt
    </echo>
    <java classname="${package}.SimpleQuery02" fork="true">
      <arg value="${infile}"/>
      <classpath refid="project.class.path" />
      
      <jvmarg value="-Djavax.net.ssl.keyStore=jssecacerts" />
      <jvmarg value="-Djavax.net.ssl.keyStorePassword=changeit" />
      <jvmarg value="-Djavax.net.ssl.trustStore=jssecacerts" />
      <jvmarg value="-Djavax.net.ssl.trustStorePassword=changeit" />
      
    </java>
  </target>



  <target name="clean" description="clean up project">
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="*.class"/> 
    </delete>
    <delete dir="dist" quiet="true" />    
    <delete dir="javadoc" quiet="true" />
  </target>
  
  <target name="javadoc" depends="compile" description="generate javadoc in javadoc subdirectory"> 
    <delete dir="javadoc" quiet="true" />                                                          
    <mkdir dir="javadoc" />
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >                          
      <fileset dir="." includes="**/*.java"/>                                                     
      <classpath>
        <pathelement location="lib/junit-4.8.2.jar"/>      
      </classpath>                                                                                 
    </javadoc>                                                                                     
  </target> 
  
  <target name="jar" depends="compile" description="generate jar file in dist directory" > 
    <mkdir dir="dist" />                                 
    <jar destfile="dist/${projectName}.jar" basedir="build" >                      
      <manifest>                                                                 
	<attribute name="Main-Class" value="${package}.SimpleQuery02"/>                 
      </manifest>                                                                
    </jar>                   
  </target> 
  
</project>
